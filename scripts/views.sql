/**Transactions Inquiry*/
create or replace view BOOKINGLIST
as
	select	MEMBERGROUP.PRIORITY,
		TRANSACTIONNO,
		TRANSACTIONDATE,
		DUEDATE,
		TRANSACTION.MEMBERID,
		MEMBER.NAME,
		DOCUMENTNO,
		TRANSACTION.ITEMNO,
		ITEM.PRIMARYTITLE,
		COPYNO,
		TRANSACTION.STATUS,
		TRANSACTION.AUDUSER,
		TRANSACTION.AUDTIME
	from	TRANSACTION, MEMBER, MEMBERGROUP, ITEM
	where	TRANSACTIONTYPE = 0
	and	TRANSACTION.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	TRANSACTION.ITEMNO = ITEM.ITEMNO
	and	TRANSACTION.STATUS = 1
	and	DUEDATE >= sysdate
	and	COPYNO is not null
	and	TRANSACTIONNO not in
	(	SELECT REFERENCENO
		FROM LOANDETAIL)
/

create or replace view BOOKINGOVERDUELIST
as
	select	MEMBERGROUP.PRIORITY,
		TRANSACTIONNO,
		TRANSACTIONDATE,
		DUEDATE,
		TRANSACTION.MEMBERID,
		MEMBER.NAME,
		DOCUMENTNO,
		TRANSACTION.ITEMNO,
		ITEM.PRIMARYTITLE,
		COPYNO,
		TRANSACTION.STATUS,
		TRANSACTION.AUDUSER,
		TRANSACTION.AUDTIME
	from	TRANSACTION, MEMBER, MEMBERGROUP, ITEM
	where	TRANSACTIONTYPE = 0
	and	TRANSACTION.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	TRANSACTION.ITEMNO = ITEM.ITEMNO
	and	TRANSACTION.STATUS = 1
	and	DUEDATE < sysdate
	and	COPYNO is not null
	and	TRANSACTIONNO not in
	(	SELECT REFERENCENO
		FROM LOANDETAIL)
/

create or replace view WAITINGLIST
as
	select	MEMBERGROUP.PRIORITY,
		TRANSACTIONNO,
		TRANSACTIONDATE,
		DUEDATE,
		TRANSACTION.MEMBERID,
		MEMBER.NAME,
		DOCUMENTNO,
		TRANSACTION.ITEMNO,
		ITEM.PRIMARYTITLE,
		COPYNO,
		TRANSACTION.STATUS,
		TRANSACTION.AUDUSER,
		TRANSACTION.AUDTIME
	from	TRANSACTION, MEMBER, MEMBERGROUP, ITEM
	where	TRANSACTIONTYPE = 0
	and	TRANSACTION.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	TRANSACTION.ITEMNO = ITEM.ITEMNO
	and	TRANSACTION.STATUS = 1
	and	DUEDATE >= sysdate
	and	COPYNO is null
	and	TRANSACTIONNO not in
	(	SELECT REFERENCENO
		FROM LOANDETAIL)
/

create or replace view WAITINGOVERDUELIST
as
	select	MEMBERGROUP.PRIORITY,
		TRANSACTIONNO,
		TRANSACTIONDATE,
		DUEDATE,
		TRANSACTION.MEMBERID,
		MEMBER.NAME,
		DOCUMENTNO,
		TRANSACTION.ITEMNO,
		ITEM.PRIMARYTITLE,
		COPYNO,
		TRANSACTION.STATUS,
		TRANSACTION.AUDUSER,
		TRANSACTION.AUDTIME
	from	TRANSACTION, MEMBER, MEMBERGROUP, ITEM
	where	TRANSACTIONTYPE = 0
	and	TRANSACTION.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	TRANSACTION.ITEMNO = ITEM.ITEMNO
	and	TRANSACTION.STATUS = 1
	and	DUEDATE < sysdate
	and	COPYNO is null
	and	TRANSACTIONNO not in
	(	SELECT REFERENCENO
		FROM LOANDETAIL)
/

create or replace view EXPANSIONLIST
as
	select	MEMBERGROUP.PRIORITY,
		TRANSACTIONNO,
		TRANSACTIONDATE,
		DUEDATE,
		TRANSACTION.MEMBERID,
		MEMBER.NAME,
		DOCUMENTNO,
		REFERENCENO,
		TRANSACTION.ITEMNO,
		ITEM.PRIMARYTITLE,
		COPYNO,
		TRANSACTION.STATUS,
		TRANSACTION.AUDUSER,
		TRANSACTION.AUDTIME
	from	TRANSACTION, MEMBER, MEMBERGROUP, ITEM
	where	TRANSACTIONTYPE = 2
	and	TRANSACTION.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	TRANSACTION.ITEMNO = ITEM.ITEMNO
	and	TRANSACTION.STATUS = 1
	and	DUEDATE >= sysdate
	and	TRANSACTIONNO not in
	(	SELECT REFERENCENO
		FROM EXPANSIONDETAIL)
/

create or replace view LOANLIST
as
	select	L.TRANSACTIONNO,
		L.TRANSACTIONDATE,
		L.MEMBERID,
		MEMBER.NAME,
		L.DOCUMENTNO,
		L.REFERENCENO,
		L.ITEMNO,
		ITEM.PRIMARYTITLE,
		L.COPYNO,
		L.STATUS,
		L.AUDUSER,
		L.AUDTIME,
		GREATEST(NVL(MAX(E.DUEDATE), L.DUEDATE), L.DUEDATE) DUEDATE
	from	TRANSACTION L, TRANSACTION E, MEMBER, MEMBERGROUP, ITEM
	where	L.TRANSACTIONTYPE = 1
	and	L.TRANSACTIONNO = E.REFERENCENO(+)
	and	L.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	L.ITEMNO = ITEM.ITEMNO
	and	L.STATUS = 1
	and	L.TRANSACTIONNO not in
	(	SELECT REFERENCENO
		FROM RETURNDETAIL)
	and	
	(	L.DUEDATE >= sysdate
		or	L.TRANSACTIONNO in (
			select	REFERENCENO
			from	EXPANSIONLIST
		)
	)
	group by	L.TRANSACTIONNO,
		L.TRANSACTIONDATE,
		L.DUEDATE,
		L.MEMBERID,
		MEMBER.NAME,
		L.DOCUMENTNO,
		L.REFERENCENO,
		L.ITEMNO,
		ITEM.PRIMARYTITLE,
		L.COPYNO,
		L.STATUS,
		L.AUDUSER,
		L.AUDTIME
/

create or replace view LOANOVERDUELIST
as
	select	L.TRANSACTIONNO,
		L.TRANSACTIONDATE,
		L.MEMBERID,
		MEMBER.NAME,
		L.DOCUMENTNO,
		L.REFERENCENO,
		L.ITEMNO,
		ITEM.PRIMARYTITLE,
		L.COPYNO,
		L.STATUS,
		L.AUDUSER,
		L.AUDTIME,
		GREATEST(NVL(MAX(E.DUEDATE), L.DUEDATE), L.DUEDATE) DUEDATE
	from	TRANSACTION L, TRANSACTION E, MEMBER, MEMBERGROUP, ITEM
	where	L.TRANSACTIONTYPE = 1
	and	L.TRANSACTIONNO = E.REFERENCENO(+)
	and	L.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	L.ITEMNO = ITEM.ITEMNO
	and	L.STATUS = 1
	and	L.TRANSACTIONNO not in
	(	SELECT REFERENCENO
		FROM RETURNDETAIL)
	and	L.DUEDATE < sysdate
	and	L.TRANSACTIONNO not in 
	(
		select	REFERENCENO
		from	EXPANSIONLIST
	)
	group by	L.TRANSACTIONNO,
		L.TRANSACTIONDATE,
		L.DUEDATE,
		L.MEMBERID,
		MEMBER.NAME,
		L.DOCUMENTNO,
		L.REFERENCENO,
		L.ITEMNO,
		ITEM.PRIMARYTITLE,
		L.COPYNO,
		L.STATUS,
		L.AUDUSER,
		L.AUDTIME
/

create or replace view TRANSACTIONOVERDUE
as
	select	L.TRANSACTIONNO,
		L.TRANSACTIONTYPE,
		L.TRANSACTIONDATE,
		L.MEMBERID,
		MEMBER.NAME,
		L.DOCUMENTNO,
		L.REFERENCENO,
		L.ITEMNO,
		ITEM.PRIMARYTITLE,
		L.COPYNO,
		L.STATUS,
		L.AUDUSER,
		L.AUDTIME,
		GREATEST(NVL(MAX(E.DUEDATE), L.DUEDATE), L.DUEDATE) DUEDATE
	from	TRANSACTION L, TRANSACTION E, MEMBER, MEMBERGROUP, ITEM
	where	L.TRANSACTIONTYPE <> 2
	and	L.TRANSACTIONTYPE <> 4
	and	L.TRANSACTIONNO = E.REFERENCENO(+)
	and	L.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	L.ITEMNO = ITEM.ITEMNO
	and	L.STATUS = 1
	and	L.TRANSACTIONNO not in
	(	SELECT REFERENCENO
		FROM RETURNDETAIL)
	and	L.DUEDATE < sysdate
	and	L.TRANSACTIONNO not in 
	(
		select	REFERENCENO
		from	EXPANSIONLIST
	)
	group by	L.TRANSACTIONNO,
		L.TRANSACTIONTYPE,
		L.TRANSACTIONDATE,
		L.DUEDATE,
		L.MEMBERID,
		MEMBER.NAME,
		L.DOCUMENTNO,
		L.REFERENCENO,
		L.ITEMNO,
		ITEM.PRIMARYTITLE,
		L.COPYNO,
		L.STATUS,
		L.AUDUSER,
		L.AUDTIME
/

/**Full view**/
create or replace view MEMBERVIEW
as
	select	MEMBERID,
		MEMBER.NAME NAME,
		MEMBER.GROUPID,
		MEMBERGROUP.NAME GROUPNAME,
		GENDER,
		BIRTHDAY,
		ADDRESS,
		PHONE,
		FAX,
		EMAIL,
		PASSWORD,
		PICTURETYPE,
		PICTURE,
		ISSUEDDATE,
		EXPIREDATE,
		MEMBER.STATUS,
		MEMBERGROUP.PRIORITY,
		MEMBERGROUP.MAXBOOKINGS,
		MEMBERGROUP.MAXLOANS,
		MEMBERGROUP.MAXEXPANSIONS,
		MEMBERGROUP.BOOKINGDURATION,
		MEMBERGROUP.LOANDURATION,
		MEMBERGROUP.EXPANSIONDURATION,
		MEMBERGROUP.MEMBERSHIPDURATION,
		MEMBERGROUP.CHARGERATE,
		MEMBER.AUDUSER,
		MEMBER.AUDTIME
	from	MEMBER,
		MEMBERGROUP
	where	MEMBER.GROUPID = MEMBERGROUP.GROUPID
/

create or replace view BOOKINGVIEW
as
	select	DOCUMENTNO,
		DOCUMENTDATE,
		BOOKING.MEMBERID,
		MEMBER.NAME,
		BOOKING.STATUS,
		POSTEDDATE,
		BOOKING.AUDUSER,
		BOOKING.AUDTIME
	from	BOOKING,
		MEMBER
	where	BOOKING.MEMBERID = MEMBER.MEMBERID
/

create or replace view BOOKINGDETAILVIEW
as
	select	DOCUMENTNO,
		BOOKINGDETAIL.ITEMNO,
		ITEM.PRIMARYTITLE,
		DETAILDATE,
		BOOKINGDETAIL.AUDUSER,
		BOOKINGDETAIL.AUDTIME
	from	BOOKINGDETAIL,
		ITEM
	where	BOOKINGDETAIL.ITEMNO = ITEM.ITEMNO
/

create or replace view LOANVIEW
as
	select	DOCUMENTNO,
		DOCUMENTDATE,
		LOAN.MEMBERID,
		MEMBER.NAME,
		LOAN.STATUS,
		POSTEDDATE,
		LOAN.AUDUSER,
		LOAN.AUDTIME
	from	LOAN,
		MEMBER
	where	LOAN.MEMBERID = MEMBER.MEMBERID
/

create or replace view LOANDETAILVIEW
as
	select	DOCUMENTNO,
		LOANDETAIL.ITEMNO,
		LOANDETAIL.COPYNO,
		ITEM.PRIMARYTITLE,
		COPY.COPYTYPE,
		COPY.LOCATION,
		DETAILDATE,
		REFERENCENO,
		LOANDETAIL.AUDUSER,
		LOANDETAIL.AUDTIME
	from	LOANDETAIL,
		ITEM,
		COPY
	where	LOANDETAIL.ITEMNO = ITEM.ITEMNO
	and	LOANDETAIL.ITEMNO = COPY.ITEMNO
	and	LOANDETAIL.COPYNO = COPY.COPYNO
/

create or replace view EXPANSIONVIEW
as
	select	DOCUMENTNO,
		DOCUMENTDATE,
		EXPANSION.MEMBERID,
		MEMBER.NAME,
		EXPANSION.STATUS,
		POSTEDDATE,
		EXPANSION.AUDUSER,
		EXPANSION.AUDTIME
	from	EXPANSION,
		MEMBER
	where	EXPANSION.MEMBERID = MEMBER.MEMBERID
/

create or replace view EXPANSIONDETAILVIEW
as
	select	DOCUMENTNO,
		EXPANSIONDETAIL.ITEMNO,
		EXPANSIONDETAIL.COPYNO,
		ITEM.PRIMARYTITLE,
		COPY.COPYTYPE,
		COPY.LOCATION,
		DETAILDATE,
		REFERENCENO,
		EXPANSIONDETAIL.AUDUSER,
		EXPANSIONDETAIL.AUDTIME
	from	EXPANSIONDETAIL,
		ITEM,
		COPY
	where	EXPANSIONDETAIL.ITEMNO = ITEM.ITEMNO
	and	EXPANSIONDETAIL.ITEMNO = COPY.ITEMNO
	and	EXPANSIONDETAIL.COPYNO = COPY.COPYNO
/

create or replace view RETURNVIEW
as
	select	DOCUMENTNO,
		DOCUMENTDATE,
		RETURN.MEMBERID,
		MEMBER.NAME,
		RETURN.STATUS,
		POSTEDDATE,
		RETURN.AUDUSER,
		RETURN.AUDTIME
	from	RETURN,
		MEMBER
	where	RETURN.MEMBERID = MEMBER.MEMBERID
/

create or replace view RETURNDETAILVIEW
as
	select	DOCUMENTNO,
		RETURNDETAIL.ITEMNO,
		RETURNDETAIL.COPYNO,
		ITEM.PRIMARYTITLE,
		COPY.COPYTYPE,
		COPY.LOCATION,
		DETAILDATE,
		REFERENCENO,
		RETURNDETAIL.AUDUSER,
		RETURNDETAIL.AUDTIME
	from	RETURNDETAIL,
		ITEM,
		COPY
	where	RETURNDETAIL.ITEMNO = ITEM.ITEMNO
	and	RETURNDETAIL.ITEMNO = COPY.ITEMNO
	and	RETURNDETAIL.COPYNO = COPY.COPYNO
/

create or replace view TRANSACTIONVIEW
as
	select	TRANSACTIONNO,
		TRANSACTIONTYPE,
		TRANSACTIONDATE,
		DUEDATE,
		TRANSACTION.MEMBERID,
		MEMBER.NAME,
		MEMBERGROUP.GROUPID,
		MEMBERGROUP.NAME GROUPNAME,
		DOCUMENTNO,
		REFERENCENO,
		TRANSACTION.ITEMNO,
		ITEM.PRIMARYTITLE,
		TRANSACTION.COPYNO,
		COPY.COPYTYPE,
		CLASSIFICATION.DDCID || ITEM.EDITION LOCATION,
		TRANSACTION.STATUS,
		TRANSACTION.AUDUSER,
		TRANSACTION.AUDTIME
	from	TRANSACTION,
		MEMBER,
		MEMBERGROUP,
		ITEM,
		COPY,
		CLASSIFICATION,
		ITEM_CLASSIFICATION
	where	TRANSACTION.MEMBERID = MEMBER.MEMBERID
	and	MEMBER.GROUPID = MEMBERGROUP.GROUPID
	and	TRANSACTION.ITEMNO = ITEM.ITEMNO
	and	TRANSACTION.ITEMNO(+) = COPY.ITEMNO
	and	TRANSACTION.COPYNO(+) = COPY.COPYNO
	and	ITEM.ITEMNO = ITEM_CLASSIFICATION.ITEMNO(+)
	and	ITEM_CLASSIFICATION.DDCID = CLASSIFICATION.DDCID(+) 
/

create or replace view ITEMVIEW
as
	select	ITEM.ITEMNO,
		ITEM.PRIMARYTITLE,
		ITEM.EDITION,
		ITEM.IMPRINT,
		ITEM.PHYSICALDESCRIPTION,
		LANGUAGE.LANGUAGEID,
		LANGUAGE.NAME LANGUAGE,
		FORMAT.FORMATID,
		FORMAT.NAME FORMAT,
		CLASSIFICATION.DDCID,
		CLASSIFICATION.NAME CLASSIFICATION,
		ITEM.AUDUSER,
		ITEM.AUDTIME
	from	ITEM,
		LANGUAGE,
		ITEM_LANGUAGE,
		FORMAT,
		ITEM_FORMAT,
		CLASSIFICATION,
		ITEM_CLASSIFICATION
	where	ITEM.ITEMNO = ITEM_LANGUAGE.ITEMNO(+)
	and	ITEM_LANGUAGE.LANGUAGEID = LANGUAGE.LANGUAGEID(+)
	and	ITEM.ITEMNO = ITEM_FORMAT.ITEMNO(+)
	and	ITEM_FORMAT.FORMATID = FORMAT.FORMATID(+)
	and	ITEM.ITEMNO = ITEM_CLASSIFICATION.ITEMNO(+)
	and	ITEM_CLASSIFICATION.DDCID = CLASSIFICATION.DDCID(+)
/

create or replace view ITEMNAME
as
	select	ITEM_NAME.ITEMNO,
		ITEM_NAME.TAG,
		NAME.NAMEID,
		NAME.NAME,
		NAME.LOCATION
	from	ITEM_NAME,
		NAME
	where	ITEM_NAME.NAMEID = NAME.NAMEID
/

create or replace view ITEMKEYWORD
as
	select	ITEM_KEYWORD.ITEMNO,
		KEYWORD.KEYWORDID,
		KEYWORD.KEYWORD
	from	ITEM_KEYWORD,
		KEYWORD
	where	ITEM_KEYWORD.KEYWORDID = KEYWORD.KEYWORDID
/

create or replace view SEARCHVIEW
as
	select	ITEM.ITEMNO,
		ITEM.PRIMARYTITLE,
		OTHERTITLE.OTHERTITLE,
		NOTE.NOTE,
		ITEM.EDITION,
		ITEM.IMPRINT,
		ITEM.PHYSICALDESCRIPTION,
		NAME.NAME AUTHOR,
		LANGUAGE.NAME LANGUAGE,
		FORMAT.NAME FORMAT,
		CLASSIFICATION.DDCID,
		CLASSIFICATION.NAME CLASSIFICATION,
		KEYWORD.KEYWORD
	from	ITEM,
		OTHERTITLE,
		NOTE,
		NAME, ITEM_NAME,
		LANGUAGE, ITEM_LANGUAGE,
		FORMAT, ITEM_FORMAT,
		CLASSIFICATION, ITEM_CLASSIFICATION,
		KEYWORD, ITEM_KEYWORD
	where	ITEM.ITEMNO = OTHERTITLE.ITEMNO(+)
	and	ITEM.ITEMNO = NOTE.ITEMNO(+)
	and	ITEM.ITEMNO = ITEM_NAME.ITEMNO(+)
	and	ITEM_NAME.NAMEID = NAME.NAMEID(+)
	and	ITEM.ITEMNO = ITEM_LANGUAGE.ITEMNO(+)
	and	ITEM_LANGUAGE.LANGUAGEID = LANGUAGE.LANGUAGEID(+)
	and	ITEM.ITEMNO = ITEM_FORMAT.ITEMNO(+)
	and	ITEM_FORMAT.FORMATID = FORMAT.FORMATID(+)
	and	ITEM.ITEMNO = ITEM_CLASSIFICATION.ITEMNO(+)
	and	ITEM_CLASSIFICATION.DDCID = CLASSIFICATION.DDCID(+)
	and	ITEM.ITEMNO = ITEM_KEYWORD.ITEMNO(+)
	and	ITEM_KEYWORD.KEYWORDID = KEYWORD.KEYWORDID(+)
/